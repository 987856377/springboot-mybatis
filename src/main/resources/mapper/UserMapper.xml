<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.UserMapper">

    <!--<trim prefix="WHERE"prefixOverrides="AND |OR "> ...</trim>-->

    <!--prefix这里表示where元素会动态前置WHERE,然后prefixOverrides会移除前面无用的and和or-->

    <!--<trim prefix="SET"suffixOverrides=","> ...</trim>-->

    <!--prefix这里表示set元素会动态前置SET,然后suffixOverrides会移除后面无用的逗号","-->

    <insert id="addUser" parameterType="User">
        INSERT INTO user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null">username,</if>
            <if test="password != null">password,</if>
            <if test="age != null">age,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="username != null">#{username},</if>
            <if test="password != null">#{password},</if>
            <if test="age != null">#{age},</if>
        </trim>
    </insert>

    <update id="updateUser" parameterType="User">
        UPDATE user
          <set>
            <if test="username != null">username=#{username},</if>
            <if test="password != null">password=#{password},</if>
            <if test="age != null">age=#{age} </if>
          </set>
          <where>
              <if test="id != null">
                  id=#{id}
              </if>
          </where>
    </update>

    <delete id="deleteUserById" parameterType="int">
        DELETE FROM user
        <where>
            <if test="id != null">
                id=#{id}
            </if>
        </where>
    </delete>

    <select id="getUserById" parameterType="int" resultType="User">
        SELECT * FROM user
        <where>
            <if test="id != null">
                id=#{id}
            </if>
        </where>
    </select>
        
    <select id="getUserByName" parameterType="String" resultType="User">
        SELECT * FROM user
        <where>
            <if test="username != null">
                username=#{username}    
                --username like concat('%', #{username}, '%')
            </if>
        </where>
    </select>
    
    <select id="getUserByIdOrName" parameterType="int" resultType="User">
        SELECT * FROM user
        where 1=1       --where 1=1 是多条件拼接时的小技巧， 后面的条件查询就可以都用 and, 不再使用<where>标签, 使用<where>标签时,不能使用where
        <choose>
            <when test="id != null">
                and id=#{id}
            </when>
            
            <when test="username != null and username != ''">
                and username=#{username}
            </when>

            <otherwise>
                and 1=2
            </otherwise>
        </choose>
    </select>
            
    <select id="getUserByIdList" resultType="User">
        SELECT * FROM user
        where id in
        <foreach collection="list" item="id" open="(" close=")" separator="," index="i">
            #{id}
        </foreach>
    </select>

    <select id="getAllUser" resultType="User">
        SELECT * FROM user
    </select>

    <select id="userCount" resultType="int">
        SELECT count(1) FROM user
    </select>
</mapper>
